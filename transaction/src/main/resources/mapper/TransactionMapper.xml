<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="indi.fimi.gdpj.transaction.repository.TransactionMapper">

    <resultMap id="transaction-order-query" type="indi.fimi.gdpj.transaction.domain.TransactionOrder">
        <id property="id" column="id"/>
        <result property="totalMoney" column="total_money"/>
        <result property="buyerId" column="buyer_id"/>
        <result property="createTime" column="create_time"/>
        <result property="creator" column="creator"/>
        <result property="modifyTime" column="modify_time"/>
        <result property="modifier" column="modifier"/>
        <result property="status" column="status"/>
        <result property="addressId" column="address_id"/>
    </resultMap>

    <resultMap id="transaction-order-info-query" type="indi.fimi.gdpj.transaction.domain.TransactionOrderInfo">
        <id property="id" column="id"/>
        <result property="totalMoney" column="total_money"/>
        <result property="buyerId" column="buyer_id"/>
        <result property="createTime" column="create_time"/>
        <result property="creator" column="creator"/>
        <result property="modifyTime" column="modify_time"/>
        <result property="modifier" column="modifier"/>
        <result property="status" column="status"/>
        <result property="addressId" column="address_id"/>
        <result property="address" column="address"/>
        <result property="consignee" column="consignee"/>
    </resultMap>

    <resultMap id="transaction-order-detail-query" type="indi.fimi.gdpj.transaction.domain.TransactionOrderDetail">
        <id property="id" column="id"/>
        <result property="transactionOrderId" column="transaction_order_id"/>
        <result property="foodstuffId" column="foodstuff_id"/>
        <result property="amount" column="amount"/>
    </resultMap>

    <resultMap id="transaction-order-detail-info-query" type="indi.fimi.gdpj.transaction.domain.TransactionOrderDetailInfo">
        <id property="id" column="id"/>
        <result property="transactionOrderId" column="transaction_order_id"/>
        <result property="foodstuffId" column="foodstuff_id"/>
        <result property="amount" column="amount"/>
        <result property="foodstuffName" column="foodstuff_name"/>
        <result property="imagePath" column="image_path"/>
    </resultMap>

    <resultMap id="payment-record-query" type="indi.fimi.gdpj.transaction.domain.PaymentRecord">
        <id property="id" column="id"/>
        <result property="transactionOrderId" column="transaction_order_id"/>
        <result property="createTime" column="create_time"/>
        <result property="creator" column="creator"/>
    </resultMap>

    <insert id="addTransactionOrder" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        INSERT INTO transaction_order (`total_money`,`buyer_id`,`create_time`,`creator`,`modify_time`,`modifier`,`status`,`address_id`) VALUES (#{totalMoney},#{buyerId},#{createTime},#{creator},#{modifyTime},#{modifier},#{status},#{addressId})
    </insert>

    <update id="modifyTransactionOrder">
        UPDATE transaction_order
        <trim prefix="set" suffixOverrides=",">
            <if test="null != totalMoney">`total_money`=#{totalMoney},</if>
            <if test="null != buyerId">`buyer_id`=#{buyerId},</if>
            <if test="null != createTime">`create_time`=#{createTime},</if>
            <if test="null != creator">`creator`=#{creator},</if>
            <if test="null != modifyTime">`modify_time`=#{modifyTime},</if>
            <if test="null != modifier">`modifier`=#{modifier},</if>
            <if test="null != status">`status`=#{status},</if>
            <if test="null != addressId">`address_id`=#{addressId},</if>
        </trim>
        WHERE `id`=#{id}
    </update>

    <select id="getTransactionOrderById" resultMap="transaction-order-query">
        SELECT * FROM transaction_order WHERE id=#{id}
    </select>

    <select id="getTransactionOrderListByBuyerId" resultMap="transaction-order-query">
        SELECT * FROM transaction_order WHERE buyer_id=#{buyerId}
    </select>

    <select id="getAllTransactionOrderList" resultMap="transaction-order-query">
        SELECT * FROM transaction_order
    </select>

    <select id="getTransactionOrderInfoListByBuyerId" resultMap="transaction-order-info-query">
        SELECT tao.*,ad.address,ad.consignee FROM transaction_order tao LEFT JOIN address ad ON tao.address_id=ad.id
    </select>

    <delete id="deleteTransactionOrderById">
        DELETE FROM transaction_order WHERE id=#{id}
    </delete>

    <insert id="addTransactionOrderDetail" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO transaction_order_detail (`transaction_order_id`,`foodstuff_id`,`amount`) VALUES (#{transactionOrderId},#{foodstuffId},#{amount})
    </insert>

    <update id="modifyTransactionOrderDetail">
        UPDATE transaction_order_detail SET transaction_order_id=#{transactionOrderId},foodstuff_id=#{foodstuffId},amount=#{amount} WHERE id=#{id}
    </update>

    <select id="getTransactionOrderDetailById" resultMap="transaction-order-detail-query">
        SELECT * FROM transaction_order_detail WHERE id=#{id}
    </select>

    <select id="getTransactionOrderDetailInfoById" resultMap="transaction-order-detail-info-query">
        SELECT tod.*,fs.name AS foodstuff_name,fs.image_path FROM (transaction_order_detail tod LEFT JOIN `foodstuff` fs ON tod.foodstuff_id=fs.id) WHERE tod.id=#{id}
    </select>
    
    <select id="getAllTransactionOrderDetailList" resultMap="transaction-order-detail-query">
        SELECT * FROM transaction_order_detail
    </select>

    <select id="getAllTransactionOrderDetailInfoList" resultMap="transaction-order-detail-info-query">
        SELECT tod.*,fs.name AS foodstuff_name,fs.image_path FROM (transaction_order_detail tod LEFT JOIN `foodstuff` fs ON tod.foodstuff_id=fs.id)
    </select>

    <select id="getTransactionOrderDetailsByTOId" resultMap="transaction-order-detail-query">
        SELECT * FROM transaction_order_detail WHERE transaction_order_id=#{toid}
    </select>

    <select id="getTransactionOrderDetailsInfoByTOId" resultMap="transaction-order-detail-info-query">
        SELECT tod.*,fs.name AS foodstuff_name,fs.image_path FROM (transaction_order_detail tod LEFT JOIN `foodstuff` fs ON tod.foodstuff_id=fs.id) WHERE tod.transaction_order_id=#{toid}
    </select>

    <delete id="deleteTransactionOrderDetailById">
        DELETE FROM transaction_order_detail WHERE id=#{id}
    </delete>

    <delete id="deleteTransactionOrderDetailsByTOId">
        DELETE FROM transaction_order_detail WHERE transaction_order_id=#{toid}
    </delete>

    <insert id="addPaymentRecord" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        INSERT INTO payment_record (`transaction_order_id`,`create_time`,`creator`) VALUES (#{transactionOrderId},#{createTime},#{creator})
    </insert>

    <update id="modifyPaymentRecord">
        UPDATE payment_record SET transaction_order_id=#{transactionOrderId},create_time=#{createTime},creator=#{creator} WHERE id=#{id}
    </update>

    <select id="getPaymentRecordById" resultMap="payment-record-query">
        SELECT * FROM payment_record WHERE id=#{id}
    </select>

    <select id="getPaymentRecordByTOId" resultMap="payment-record-query">
        SELECT * FROM payment_record WHERE transaction_order_id=#{toid}
    </select>

    <select id="getAllPaymentList" resultMap="payment-record-query">
        SELECT * FROM payment_record
    </select>

    <delete id="deletePaymentRecordById">
        DELETE FROM payment_record WHERE id=#{id}
    </delete>
</mapper>